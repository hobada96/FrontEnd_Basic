// 내가 한 답변function solution(progresses, speeds) {    //값이 100보다 작다면 배열간 덧셈 / else 배포 (순서대로)    //선입 선출로.    let arr = progresses;    let arr2 = speeds;    let count = 0;    const arrCount = [];    let i = 0;    while(true){        arr = arrSum(arr,arr2);        [count,arr2,arr] = countInArr(arr,arr2);        arrCount.push(count);        if(arr.length === 0) break;    }    return arrCount;}const arrSum = (arr,speeds) =>{    while(true){        arr = arr.map((x,y) => x + speeds[y])        if(arr[0] >= 100){            break;        }    }    return arr;}const countInArr = (arr,arr2) => {    let count = 0;    while(true){        if(arr[0] < 100) break;        else {            count++;            if(arr.length == 1){                arr.pop();                arr2.pop();                return [count,arr2,arr]            }            arr = arr.filter((x,y)=> y>= 1)            arr2 = arr2.filter((x,y)=> y>= 1)        }    }    return [count,arr2,arr]}// 다른사람 풀이function solution(progresses, speeds) {    let answer = [0];    let days = progresses.map((progress, index) => Math.ceil((100 - progress) / speeds[index]));    let maxDay = days[0];    for(let i = 0, j = 0; i< days.length; i++){        if(days[i] <= maxDay) {            answer[j] += 1;        } else {            maxDay = days[i];            answer[++j] = 1;        }    }    return answer;}